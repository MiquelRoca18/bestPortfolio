---
import MainLayout from '../layouts/MainLayout.astro';
import TrophyCase from '../components/Trophies/TrophyCase';
---

<MainLayout title="Trofeos Ganados">
  <div class="bg-gradient-to-b from-gray-50 to-valencia-white dark:from-valencia-black/95 dark:to-gray-900">
    <div class="container mx-auto px-4 py-16">
      <div class="text-center max-w-3xl mx-auto mb-12">
        <h1 class="text-5xl font-bold mb-6 text-valencia-orange dark:text-valencia-yellow">Trofeos Ganados</h1>
        <p class="text-xl text-gray-700 dark:text-gray-300">
          Cada proyecto es como un partido ganado en mi carrera como desarrollador.
          Aquí están mis trofeos más significativos.
        </p>
      </div>
      
      <div class="relative">
        <div class="absolute top-0 left-1/2 transform -translate-x-1/2 -translate-y-1/2">
          <div class="w-40 h-1 bg-gradient-to-r from-valencia-orange via-valencia-yellow to-valencia-red rounded-full"></div>
        </div>
      </div>
      
      <!-- Vista de trofeos principales -->
      <TrophyCase 
        client:visible 
        projects={[
          {
            title: 'Sistema ERP Construcción',
            category: 'Aplicación Web',
            description: 'ERP para construcción que centraliza proyectos, recursos, finanzas y personal. Optimiza procesos y decisiones, escalable y personalizable. Ideal para cualquier proyecto.',
            githubLink: 'https://github.com/MiquelRoca18/sistema-erp-construccion',
            projectLink: 'https://sistema-erp-construccion-1.onrender.com/',
            technologies: ['Vue', 'PHP', 'MySQL', 'Tailwind CSS']
          },
          {
            title: 'Lanzamientos SpaceX',
            category: 'Sitio Web',
            description: 'Sitio web en Astro que muestra lanzamientos de SpaceX a través de su API, con número de vuelo, parche, descripción y estado, y navegación por paginación.',
            githubLink: 'https://github.com/MiquelRoca18/astroSpaceX',
            projectLink: 'https://astrospacex.netlify.app/',
            technologies: ['Astro', 'API SpaceX', 'JavaScript']
          } ,
          {
            title: 'Buscador de Películas',
            category: 'Aplicación Web',
            description: 'Buscador de películas desarrollado en React. Permite buscar por cualquier cadena de texto dentro de un catálogo de películas en un archivo JSON y ordenarlas alfabéticamente.',
            githubLink: 'https://github.com/MiquelRoca18/react-buscador-peliculas',
            projectLink: 'https://reeaactflixx.netlify.app/',
            technologies: ['React', 'JavaScript', 'JSON']
          },
          {
            title: 'Tienda en Línea',
            category: 'Aplicación Web',
            description: 'Aplicación de tienda en línea construida con React. Permite explorar productos desde un JSON, filtrarlos por precio y categoría, agregar al carrito y ajustar cantidades.',
            githubLink: 'https://github.com/MiquelRoca18/shoppingCart',
            projectLink: 'https://tiendareactroca.netlify.app/',
            technologies: ['React', 'JavaScript', 'JSON', 'CSS']
          },
          {
            title: 'Nike Store',
            category: 'Landing Page',
            description: 'Tienda en línea moderna para productos Nike, construida con React y Tailwind CSS. Diseño elegante y responsive con secciones para colecciones, ofertas, reseñas de clientes y formulario de suscripción.',
            githubLink: 'https://github.com/MiquelRoca18/tailwindNike',
            projectLink: 'https://tailwindnikee.netlify.app/',
            technologies: ['React', 'Tailwind CSS', 'JavaScript']
          }
        ]}
      />
    </div>
  </div>
</MainLayout>

<style>
  /* Efecto de brillo para los premios */
  .bg-valencia-yellow\/20, .bg-valencia-yellow\/10 {
    position: relative;
    overflow: hidden;
  }
  
  .bg-valencia-yellow\/20::after, .bg-valencia-yellow\/10::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -60%;
    width: 200%;
    height: 200%;
    background: linear-gradient(to right, transparent, rgba(255,255,255,0.3), transparent);
    transform: rotate(45deg);
    animation: shine 3s infinite;
  }
  
  @keyframes shine {
    0% { transform: rotate(45deg) translateX(-100%); }
    50% { transform: rotate(45deg) translateX(100%); }
    100% { transform: rotate(45deg) translateX(100%); }
  }
</style>